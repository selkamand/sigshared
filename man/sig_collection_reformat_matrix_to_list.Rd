% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/conversions.R
\name{sig_collection_reformat_matrix_to_list}
\alias{sig_collection_reformat_matrix_to_list}
\title{Convert Matrix of Signatures or Catalogues to List Format}
\usage{
sig_collection_reformat_matrix_to_list(
  mx,
  values = c("count", "fraction"),
  types = NULL,
  verbose = TRUE
)
}
\arguments{
\item{mx}{A numeric matrix with:
\itemize{
\item \strong{Rows}: Channels (must be named and unique)
\item \strong{Columns}: Signatures or catalogues (must be named and unique)
\item \strong{Values}: Fractions (for signatures) or counts (for catalogues)
}}

\item{values}{Either \code{"count"} or \code{"fraction"} (default = \code{"count"}). This determines how the matrix
values are interpreted. If \code{"count"} is chosen, \code{fraction} will be calculated automatically.}

\item{types}{A character vector describing the mutation \code{type} of each row/channel\verb{. If }NULL\verb{, this is inferred from the matrix's }type` attribute or defaulted to rownames.}

\item{verbose}{Logical. If \code{TRUE} (default), emits a warning if the matrix values look inconsistent
with the chosen \code{values} argument (e.g., fractional-looking values with \code{values = "count"}).}
}
\value{
A named list of signature or catalogue \code{data.frame}s. Each \code{data.frame} will contain:
\itemize{
\item \code{channel}: Row names of the matrix
\item \code{type}: As provided or inferred
\item \code{fraction}: Matrix column or computed from \code{count}
\item \code{count}: Only included if \code{values = "count"}
}
}
\description{
Converts a matrix of mutational signatures or catalogues back into a named list of \code{data.frame}s
in the sigverse format. Each column in the matrix is treated as one signature or catalogue.
}
\details{
This is the inverse of \code{\link[=sig_collection_reformat_list_to_matrix]{sig_collection_reformat_list_to_matrix()}}. It supports both
signature-style (fraction-only) and catalogue-style (count + fraction) output, depending on the
\code{values} parameter and matrix content.

A \code{type} attribute is optional but recommended on the matrix to map each channel to a mutation type.
If \code{types} is not provided explicitly, the function uses this attribute or falls back to reusing
channel names as \code{type}.
}
\examples{
# From matrix of signatures
mx <- example_signature_collection_matrix()
collection <- sig_collection_reformat_matrix_to_list(mx, values = "fraction")

# From matrix of catalogues
mx_cat <- example_catalogue_collection_matrix()
collection_cat <- sig_collection_reformat_matrix_to_list(mx_cat, values = "count")

# Edge case: matrix with no 'type' attribute
# (will use channel names)
mx_notyped <- example_signature_collection_matrix()
attr(mx_notyped, "type") <- NULL
sig_collection_reformat_matrix_to_list(mx_notyped, values = "fraction")

# Custom types
mx_min <- matrix(
  c(0.1, 0.3, 0.6,
    0.2, 0.5, 0.3),
  nrow = 3,
  ncol = 2,
  dimnames = list(
    c("C>A", "C>G", "C>T"),
    c("S1", "S2")
  )
)
attr(mx_min, "type") <- c("SNV", "SNV", "SNV")
sig_collection_reformat_matrix_to_list(mx_min, values = "fraction")
}
\seealso{
\code{\link[=sig_collection_reformat_list_to_matrix]{sig_collection_reformat_list_to_matrix()}}, \code{\link[=sig_collection_reformat_list_to_tidy]{sig_collection_reformat_list_to_tidy()}}, \code{\link[=sig_collection_reformat_tidy_to_list]{sig_collection_reformat_tidy_to_list()}}
}
